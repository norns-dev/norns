name: "PR Checks"
on:
  pull_request:
    branches:
      - "main"
      - "develop"
      - "release/**"
env:
  PY_VERSION: "3.11"
  POETRY_VERSION: "1.7.1"

jobs:
  style:
    name: "pre-commit Checks"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ env.POETRY_VERSION }}
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          installer-parallel: true
      - name: Set up Python ${{ env.PY_VERSION }} on ubuntu-latest
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --no-interaction --with dev
      - uses: pre-commit/action@v3.0.1

  tests:
    name: "Unit Testing"
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DJANGO_DEBUG: ${{ vars.DJANGO_DEBUG }}
      MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ env.POETRY_VERSION }}
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          installer-parallel: true
      - name: Set up Python ${{ env.PY_VERSION }} on ubuntu-latest
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Run tests
        run: poetry run python3 manage.py test --parallel

  docs:
    name: "Build Docs"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ env.POETRY_VERSION }}
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          installer-parallel: true
      - name: Set up Python ${{ env.PY_VERSION }} on ubuntu-latest
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --no-interaction --with docs
      - name: Build HTML
        run: poetry run sphinx-build -W -a -E -b html docs/source/ docs/build/html
      - name: Upload sphinx artifacts
        uses: actions/upload-artifact@v4
        with:
          name: html-docs
          path: docs/build/html/
