default_stages: [ pre-commit, post-checkout, post-merge ]
default_install_hook_types: [ pre-commit, post-checkout, post-merge ]
exclude: ^.idea/.*$
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # file type specific checks
      - id: check-yaml # verifies syntax of yaml files
      - id: check-json # verifies syntax of json files
      - id: pretty-format-json # fixes indentation of json files
        args: [ "--autofix", "--no-sort-keys" ]
      - id: check-toml # verifies syntax of toml files
      - id: check-executables-have-shebangs # verifies non-binary executables have shebang
      # general files
      - id: end-of-file-fixer # makes sure files end in a newline and only a newline.
      - id: trailing-whitespace # trims trailing whitespace.
      - id: check-case-conflict # check for files that would conflict on a case-insensitive filesystem
      - id: detect-private-key # checks for the existence of private keys
      - id: check-added-large-files # prevent giant files from being committed
        args: [ "--maxkb=2048" ]
      # python checks
      - id: name-tests-test # verifies that test files are named correctly
        args: [ "--pytest-test-first" ]
      - id: check-docstring-first # checks for code before the docstring
      - id: debug-statements # check for debugger imports and breakpoint calls in python source
      # git checks
      - id: no-commit-to-branch # protect specific branches from direct checkins
        args: [ "--branch", "main", "--branch", "develop", "--branch", "release/*" ]
        stages: [ pre-commit ]
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      # python checks
      - id: python-no-eval # check for the eval() built-in function
      - id: python-no-log-warn # check for the deprecated .warn() method of python loggers
      # rst checks
      - id: rst-backticks # detect use of single backticks when writing rst
      - id: rst-directive-colons # detect rst directive formatting
      - id: rst-inline-touching-normal # detect inline code touching normal text in rst
  - repo: https://github.com/python-poetry/poetry
    rev: 1.7.1
    hooks:
      - id: poetry-check # checks poetry config is not broken
      - id: poetry-lock # ensures lock file is up-to-date
        args: [ "--no-update", "--no-cache" ] # Do not update locked versions, only refresh lock file.
      - id: poetry-export
        args: [ "--without-hashes", "-o", "requirements.txt", "-f", "requirements.txt"]
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint-fix
  - repo: local
    hooks:
      - id: bandit
        name: bandit
        entry: poetry run bandit
        language: system
        types: [ python ]
      - id: pyupgrade
        name: pyupgrade
        entry: poetry run pyupgrade --py311-plus
        language: system
        types: [ python ]
      - id: isort
        name: isort
        entry: poetry run isort .
        language: system
        types: [ python ]
      - id: black
        name: black
        entry: poetry run black
        language: system
        types: [ python ]
      - id: flake8
        name: flake8
        entry: poetry run flake8
        language: system
        types: [ python ]
      - id: pylint
        name: pylint
        entry: poetry run pylint -rn -sn
        language: system
        types: [ python ]
        exclude: ^.*/tests.py$
      - id: new-branch-setup
        name: new-branch-setup
        entry: poetry install --sync --with dev && rm db.sqlite3 && python migrate.py migrate
        language: system
        always_run: true
        stages:
          - post-checkout
          - post-merge
